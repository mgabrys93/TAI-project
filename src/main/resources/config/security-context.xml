<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd">

    <!-- Authentication manager authenticates user using queries -->
    <security:authentication-manager>
        <security:authentication-provider>
            <security:jdbc-user-service id="jdbcUserService" data-source-ref="dataSource"
                                        users-by-username-query="select username, password, enabled from users where binary users.username = ?"
                                        authorities-by-username-query="select username, role from roles where binary roles.username = ?"/>
            <!-- Specified password encoder -->
            <security:password-encoder ref="passwordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>
    
    <!-- List of mapped sites with access rules -->
    <security:http use-expressions="true">
        <security:intercept-url pattern="/home" access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="/" access="permitAll"/>
        <security:intercept-url pattern="/static/**" access="permitAll"/>
        <security:intercept-url pattern="/login" access="permitAll"/>
        <security:intercept-url pattern="/newaccount" access="permitAll"/>
        <security:intercept-url pattern="/createaccount" access="permitAll"/>
        <security:intercept-url pattern="/accountcreated" access="permitAll"/>
        <security:intercept-url pattern="/denied" access="permitAll"/>
        <security:intercept-url pattern="/loggedout" access="permitAll"/>
        <security:intercept-url pattern="/newgroup" access="hasRole('ROLE_USER')"/>
        <security:intercept-url pattern="/groupcreated" access="hasRole('ROLE_USER')"/>
        <security:form-login login-page="/login" authentication-failure-url="/login?error=true"/>
        <security:logout logout-success-url="/loggedout"/>
        <security:access-denied-handler error-page="/denied"/>
        <security:remember-me key="offersAppKey" user-service-ref="jdbcUserService"/>
    </security:http>
 	
 	<!-- Enables @Secured annotations used to specify secured methods -->
    <security:global-method-security secured-annotations="enabled"/>

    <!-- Encoder of passwords -->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder">
    </bean>

</beans>